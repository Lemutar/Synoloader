{
  "name": "grunt-jsbeautifier",
  "description": "jsbeautifier.org for grunt",
  "version": "0.2.7",
  "homepage": "https://github.com/vkadam/grunt-jsbeautifier",
  "author": {
    "name": "Vishal Kadam",
    "email": "vishal.4kadam@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vkadam/grunt-jsbeautifier.git"
  },
  "bugs": {
    "url": "https://github.com/vkadam/grunt-jsbeautifier/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/vkadam/grunt-jsbeautifier/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">=0.8"
  },
  "dependencies": {
    "grunt": ">=0.4.1",
    "js-beautify": ">=1.4.2",
    "lodash": ">=2.4.1",
    "underscore.string": ">=2.3.3"
  },
  "devDependencies": {
    "grunt-contrib-jshint": ">=0.8.0",
    "grunt-contrib-nodeunit": ">=0.3.2",
    "grunt-contrib-copy": ">=0.5.0",
    "grunt-contrib-clean": ">=0.5.0"
  },
  "scripts": {
    "test": "grunt test -v"
  },
  "keywords": [
    "gruntplugin",
    "beautify",
    "beautifier",
    "jsbeautifier",
    "code-quality",
    "javascript beautify",
    "html beautify",
    "css beautify",
    "json beautify"
  ],
  "readme": "# grunt-jsbeautifier [![Build Status](https://travis-ci.org/vkadam/grunt-jsbeautifier.png)](https://travis-ci.org/vkadam/grunt-jsbeautifier)\n\n[jsbeautifier.org](http://jsbeautifier.org/) for grunt\n\n## Getting Started\nThis plugin recommends using Grunt `~0.4.1`. Grunt `~0.3.0` is only suported till version 0.1.4\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n### Grunt `~0.4.1`\n```\nnpm install grunt-jsbeautifier --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```\ngrunt.loadNpmTasks('grunt-jsbeautifier');\n```\n\n### Grunt `~0.3.0`\nInstall this grunt plugin next to your project's [grunt.js gruntfile][getting_started] with:\n\n```\nnpm install grunt-jsbeautifier@0.1.4\n```\n\nThen add this line to your project's `grunt.js` gruntfile:\n\n```\ngrunt.loadNpmTasks('grunt-jsbeautifier');\n```\n\n[grunt]: http://gruntjs.com/\n[getting_started]: https://github.com/gruntjs/grunt/blob/master/docs/getting_started.md\n\n## Examples\n\n### Single Task\n  - files (required): Your source files to beautify\n  - options (optional): Overwrite default jsbeautifier options\n\n```javascript\n\"jsbeautifier\" : {\n    files : [\"src/**/*.js\"],\n    options : {\n    }\n}\n```\n\n### Multi Task\n  - src (required): Your source files to beautify\n  - options (optional): Overwrite default jsbeautifier options\n\n```javascript\n\"jsbeautifier\" : {\n    \"default\": {\n        src : [\"src/**/*.js\"]\n    },\n    \"git-pre-commit\": {\n        src : [\"src/**/*.js\"],\n        options : {\n            mode:\"VERIFY_ONLY\"\n        }\n    }\n}\n```\n\n## Config\n\n#### files\nType: `Files`\nDefault value: `[]`\n\nList of files to be beautified. This option is applicable only for **Single Task**\n\n#### src\nType: `Files`\nDefault value: `[]`\n\nList of files to be beautified. This option is applicable only for **Multi Task**\n\n#### options.mode (optional)\nType: `String`\nDefault value: `VERIFY_AND_WRITE`\n\nIf mode is \"VERIFY_ONLY\", then task will fail if at least one file can be beautified. This is useful for pre-commit check.\n\n#### options.dest (optional)\nType: `String`\nDefault value: `''`\n\nAll beautified file will be stored under \"dest\".\n\n#### options.config (optional)\nType: `String`\n\nThe file path (relative to your process's cwd) to the config file. This is usually in `JSON` format, like the one supported by js-beautify itself\n\n### Default options from [js-beautify](https://github.com/einars/js-beautify#options) can be used\n```javascript\n  \"jsbeautifier\": {\n      files: [\"src/**/*.js\"],\n      options: {\n          config: \"path/to/configFile\",\n          html: {\n              braceStyle: \"collapse\",\n              indentChar: \" \",\n              indentScripts: \"keep\",\n              indentSize: 4,\n              maxPreserveNewlines: 10,\n              preserveNewlines: true,\n              unformatted: [\"a\", \"sub\", \"sup\", \"b\", \"i\", \"u\"],\n              wrapLineLength: 0\n          },\n          css: {\n              indentChar: \" \",\n              indentSize: 4\n          },\n          js: {\n              braceStyle: \"collapse\",\n              breakChainedMethods: false,\n              e4x: false,\n              evalCode: false,\n              indentChar: \" \",\n              indentLevel: 0,\n              indentSize: 4,\n              indentWithTabs: false,\n              jslintHappy: false,\n              keepArrayIndentation: false,\n              keepFunctionIndentation: false,\n              maxPreserveNewlines: 10,\n              preserveNewlines: true,\n              spaceBeforeConditional: true,\n              spaceInParen: false,\n              unescapeStrings: false,\n              wrapLineLength: 0\n          }\n      }\n  },\n```\nOnly specifiy options to overwrite.\n\n**NOTE:** All options can be specified similar to [js-beautify](https://github.com/einars/js-beautify#options) using underscore.\n\n\n### FAQ/Tips\n#### 1. Exclude files\nAll files from foo folder except bar.js\n```javascript\njsbeautifier: {\n    files: ['foo/*.js', '!foo/bar.js']\n}\n```\n#### 2. Use specific version of js-beautify\nIf you want use specific version of js-beautify instead of latest, please refer to [npm shrinkwrap](https://npmjs.org/doc/shrinkwrap.html)\n\n#### 3. Beautify files other than js, json, css & html\nIf you need to beautify files other than js, json, css & html, it can be done by passing **fileTypes**.\n\nFor example, beautifying **'.js.erb'** files **along with '.js'**, beautifying **'.less'** files **along with '.css'**, beautifying **'.html.erb'** files **along with '.html'**.\n```\njsbeautifier: {\n    files: ['foo/css/*.css', 'bar/css/*.less', 'foo/js/*.js', 'bar/js/*.js.erb', 'foo/html/*.html', 'bar/html/*.html.erb'],\n    options: {\n        js: {\n            fileTypes: ['.js.erb']\n        },\n        css: {\n            fileTypes: ['.less']\n        },\n        html: {\n            fileTypes: ['.html.erb']\n        }\n    }\n}\n```\n\n## Release History\n* 0.2.7: Use latest dependencies without throwing \"latest\" keyword warning, [35](https://github.com/vkadam/grunt-jsbeautifier/issues/35)\n* 0.2.6: Bumped version after for changing dist to dest\n* 0.2.5: Support dist folder and show all failed files in VERIFY_MODE [22](https://github.com/vkadam/grunt-jsbeautifier/issues/22), [24](https://github.com/vkadam/grunt-jsbeautifier/issues/24), [25](https://github.com/vkadam/grunt-jsbeautifier/issues/25)\n* 0.2.4: Support custom file types other than js, json, css & html. Use latest versions for dependencies [23](https://github.com/vkadam/grunt-jsbeautifier/issues/23), [26](https://github.com/vkadam/grunt-jsbeautifier/issues/26)\n* 0.2.3: Always use latest version of js-beautify. [21](https://github.com/vkadam/grunt-jsbeautifier/issues/21)\n* 0.2.2: Configuration is now lint happy. Options can be specified in cameCase, [17](https://github.com/vkadam/grunt-jsbeautifier/issues/17)\n* 0.2.1: Added Support for flat config file\n* 0.2.0: Added support for css, html and json files\n* 0.1.10: Added verify only mode [15](https://github.com/vkadam/grunt-jsbeautifier/issues/15). This will fail if any file needs beautification.\n* 0.1.9: Upgraded [js-beautify](https://npmjs.org/package/js-beautify) to 1.4.0. Fixed issues [13](https://github.com/vkadam/grunt-jsbeautifier/issues/13)\n* 0.1.8: Upgraded [js-beautify](https://npmjs.org/package/js-beautify) to ~1.3.1. Fixed issues [10](https://github.com/vkadam/grunt-jsbeautifier/issues/10), [12](https://github.com/vkadam/grunt-jsbeautifier/issues/12)\n* 0.1.7: Upgraded grunt to ~0.4.1, [js-beautify](https://npmjs.org/package/js-beautify) to ~1.2.0. Fixed issues [6](https://github.com/vkadam/grunt-jsbeautifier/issues/6), [7](https://github.com/vkadam/grunt-jsbeautifier/issues/7), [8](https://github.com/vkadam/grunt-jsbeautifier/issues/8), [9](https://github.com/vkadam/grunt-jsbeautifier/issues/9)\n* 0.1.6: Make sure new line at the end of file. Fixed issue [5](https://github.com/vkadam/grunt-jsbeautifier/issues/5)\n* 0.1.5: Upgraded to grunt ~0.4.0. Fixed issues [2](https://github.com/vkadam/grunt-jsbeautifier/issues/2), [3](https://github.com/vkadam/grunt-jsbeautifier/issues/3), [4](https://github.com/vkadam/grunt-jsbeautifier/issues/4)\n* 0.1.4: Upgraded [js-beautify](https://npmjs.org/package/js-beautify) to latest version (0.3.2)\n* 0.1.3: Added fix for block comment formatting.\n* 0.1.2: Supported grunt 0.4~.\n* 0.1.1: Readme file changes\n* 0.1.0: Initial version.\n\n## License\nCopyright (c) 2012 Vishal Kadam\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "grunt-jsbeautifier@0.2.7",
  "_shasum": "7e35a12acb61369e498e1a9778b189a890c6a281",
  "_from": "grunt-jsbeautifier@^0.2.7",
  "_resolved": "https://registry.npmjs.org/grunt-jsbeautifier/-/grunt-jsbeautifier-0.2.7.tgz"
}
